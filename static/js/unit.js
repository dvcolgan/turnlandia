// Generated by CoffeeScript 1.6.3
var Road, Tree, Unit;

Unit = (function() {
  function Unit(json) {
    _.extend(this, json);
  }

  Unit.prototype.draw = function() {
    var rgb, screenX, screenY, textX, textY, unitRadius, unitX, unitY;
    screenX = TB.camera.worldToScreenPosX(this.col * TB.gridSize);
    screenY = TB.camera.worldToScreenPosY(this.row * TB.gridSize);
    unitX = screenX + TB.camera.zoomedGridSize / 2;
    unitY = screenY + TB.camera.zoomedGridSize / 2;
    unitRadius = TB.camera.zoomedUnitSize / 2;
    textX = unitX;
    textY = unitY + 5;
    TB.ctx.save();
    TB.ctx.fillStyle = this.ownerColor;
    rgb = util.hexToRGB(this.ownerColor);
    rgb.r = parseInt(rgb.r * 0.4);
    rgb.g = parseInt(rgb.g * 0.4);
    rgb.b = parseInt(rgb.b * 0.4);
    TB.ctx.strokeStyle = "rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ",1)";
    TB.ctx.lineWidth = 2;
    TB.ctx.beginPath();
    TB.ctx.arc(unitX, unitY, TB.camera.zoomedUnitSize / 2, 0, 2 * Math.PI);
    TB.ctx.fill();
    TB.ctx.stroke();
    TB.ctx.textAlign = 'center';
    TB.fillOutlinedText(this.amount, textX, textY);
    return TB.ctx.restore();
  };

  return Unit;

})();

Tree = (function() {
  function Tree(json) {
    _.extend(this, json);
  }

  Tree.prototype.draw = function() {
    if (!this.subTiles) {
      this.subTiles = TB.board.getSubtiles(this.col, this.row);
    }
    this.drawSubTile(this.subTiles[0][0], 0, 0);
    this.drawSubTile(this.subTiles[0][1], TB.camera.zoomedSubGridSize, 0);
    this.drawSubTile(this.subTiles[1][0], 0, TB.camera.zoomedSubGridSize);
    return this.drawSubTile(this.subTiles[1][1], TB.camera.zoomedSubGridSize, TB.camera.zoomedSubGridSize);
  };

  Tree.prototype.drawSubTile = function(subTile, subTileOffsetX, subTileOffsetY) {
    var screenX, screenY;
    screenX = TB.camera.worldColToScreenPosX(this.col);
    screenY = TB.camera.worldRowToScreenPosY(this.row);
    return TB.ctx.drawImage(TB.images.forestTiles, subTile[0], subTile[1], TB.gridSize / 2, TB.gridSize / 2, screenX + subTileOffsetX, screenY + subTileOffsetY, TB.camera.zoomedSubGridSize, TB.camera.zoomedSubGridSize);
  };

  return Tree;

})();

Road = (function() {
  function Road() {}

  return Road;

})();
