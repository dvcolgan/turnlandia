// Generated by CoffeeScript 1.6.3
define(['lodash', 'src/action', 'src/board'], function(_, action, board) {
  var System;
  System = (function() {
    function System() {
      var _this = this;
      window.TB = this;
      this.action_log = new action.ActionLog();
      this.actions = [];
      this.current_action = 'move';
      $('button[data-action="move"].btn-action').addClass('active');
      $.getJSON('/api/initial-load/', function(data, status) {
        var action_, _i, _len, _ref;
        if (status === 'success') {
          _.extend(_this, data.board_consts);
          _ref = data.actions;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            action_ = _ref[_i];
            _this.add_action(action_);
          }
          _this.account = data.account;
        }
        return _this.board = new board.Board($('.board'));
      });
      $(document).keydown(function(event) {
        switch (event.which) {
          case 49:
            return _this.set_action('move');
          case 50:
            return _this.set_action('attack');
          case 51:
            return _this.set_action('city');
        }
      });
      $('.btn-action, .btn-action img').click(function(event) {
        var which;
        if ($(event.target).data('action')) {
          which = $(event.target).data('action');
        } else {
          which = $(event.target).parents('.btn-action').data('action');
        }
        if (which === 'undo') {
          _this.action_log.remove_last_action();
          return $.ajax({
            url: '/api/undo/' + _this.action_log.get_last_action().id + '/',
            method: 'POST',
            dataType: 'json',
            success: function(data) {
              return true;
            },
            error: function(data) {
              alert('Problem saving your action.  The page will now refresh.  Sorry, I should make this more robust sometime.');
              return window.location.href += '';
            }
          });
        } else {
          return _this.set_action(which);
        }
      });
    }

    System.prototype.set_action = function(action_) {
      var $btn_dom_node;
      console.log('setting action to ' + action_);
      this.current_action = action_;
      $btn_dom_node = $('button[data-action=' + action_ + ']');
      $('.btn-action').not($btn_dom_node).removeClass('active');
      return $btn_dom_node.addClass('active');
    };

    System.prototype.add_action = function(data) {
      var new_action;
      new_action = new action.Action(data);
      this.actions.push(new_action);
      return this.action_log.add(new_action);
    };

    return System;

  })();
  return new System();
});
